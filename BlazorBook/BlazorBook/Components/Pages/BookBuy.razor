@page "/bookbuy/{Id}"
@* @rendermode InteractiveAuto
 *@
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode InteractiveServer


@using System.Net.Http.Json
@using BlazorBook.Models
@using Newtonsoft.Json
@if (Books == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="border-2">
        <p class="container">ID:@Books.Id</p>
    </div>
    <div class="border-2">
        <p class="container">Name:@Books.Name</p>
    </div>
    <div class="border-2">
        <p class="container">Author:@Books.Author</p>
    </div>
    <div class="border-2">
        <p class="container">Year of Publication:@Books.Year_of_publication</p>
        <button type="button" class="btn btn-primary" @onclick="Purchase">Купить</button>

    </div>


}

@code {
    [Parameter]
    public string Id { get; set; }

    string url = "https://localhost:7224/api/Books/";
    string urldel = "https://localhost:7224/api/Books/";

    Book Books;
    HttpClient httpClient = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (Books == null)
            {
                httpClient = ClientFactory.CreateClient();
                await LoadData();
            }
            else
            {

            }
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {


            var response = await httpClient.GetFromJsonAsync<Book>(url + Id);
            if (response != null)
            {
                Books = response;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task Purchase()
    {
        try
        {
            var response = await httpClient.DeleteAsync(urldel + Id);
            if (response.IsSuccessStatusCode)
            {
                // Обработка успешной покупки
            }
            else
            {
                // Обработка неудачной покупки
            }
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
